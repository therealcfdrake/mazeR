% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MazeGenerators.R
\name{generate_maze_tri}
\alias{generate_maze_tri}
\title{Generate Maze Object on Triangular Grid}
\usage{
generate_maze_tri(
  w_maze = 5,
  l_maze = 10,
  exit = NULL,
  i_weight = 1,
  j_weight = 1,
  curl = 0,
  curl_weight = 0,
  curl_prob = 0,
  uncurl = FALSE,
  progress = FALSE,
  seed = NULL,
  ... = NULL
)
}
\arguments{
\item{w_maze}{width of maze}

\item{l_maze}{length of maze}

\item{exit}{`c(w, l)` coordinates of exit}

\item{i_weight}{a positive weight given to random directions in the i direction}

\item{j_weight}{a positive weight given to random directions in the j direction}

\item{curl}{a real on the interval `[-1, 1]` with negative values favoring clockwise
turns and positive values favoring counterclockwise turns. a curl of 0 favors continuing
in a straight line.}

\item{curl_weight}{a positive weight given to curl related}

\item{curl_prob}{a numeric value describing the probability that curl is applied. Once applied, curl
will influence subsequent direction choices until the algorithm reaches a dead end.}

\item{uncurl}{a logical which causes the direction of curl to alternate each time it resets}

\item{progress}{a logical which triggers an update to print each time 1000 cells have been visited}

\item{seed}{a real value which can be passed as a seed to reproduce a maze}

\item{...}{other parameters}
}
\value{
a Maze object
}
\description{
Generate Maze Object on Triangular Grid
}
\examples{
generate_maze_tri()
}
